name: Add Reviewer to Pull Request

on:
  issue_comment:
    types: [created]

jobs:
  add_reviewer:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Add user as reviewer
        # run: |
        #   curl \
        #     -X POST \
        #     -H "Accept: application/vnd.github.v3+json" \
        #     -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        #     https://api.github.com/repos/${{ github.event.owner }}/${{ github.event.repo }}/pulls/${{ github.event.pull_request.number }}/requested_reviewers \
        #     --data '{"reviewers": ["tuandang-rikai"]}'
        uses: actions/github-script@v4
        with:
          script: |
            const { issue, repository} = context.payload
            const username = 'dangngoctuan';
            const reviewers = [username]
            console.log(context)
            const pull_number = issue.number
            const response = await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers', {
              owner: 'dangngoctuan',
              repo: repository.name,
              pull_number: pull_number,
              reviewers: reviewers,
              headers: {
                'X-GitHub-Api-Version': '2022-11-28'
              }
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Pull Request Reviewer

# on: [issue_comment, pull_request_review]
# jobs:
#   request-reviewer:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Checkout Pull Request
#         run: hub pr checkout ${{ github.event.issue.number }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       - name: assign_review_by_comment
#         uses: AveryCameronUofR/add-reviewer-gh-action@1.0.3
#         with:
#           reviewers: "tuandang-rikai"
#           token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Add Reviewers
      #   uses: hkusu/review-assign-action@v1
      #   id: assign
      #   with:
      #     reviewers: tuandang-rikai
      # - name: Extract username
      #   uses: actions-ecosystem/action-regex-match@v2
      #   id: extract
      #   with:
      #     text: ${{ github.event.comment.body }}
      #     regex: '(@\S+)'
      # - name: Check if user exists
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const username = '${{ steps.extract.outputs.matches }}';
      #       console.log(username)
      #       const octokit = require("@octokit/request");
      #       const response = await octokit.request("GET /users/{username}", {
      #         username: username
      #       });
      #       console.log(response.data)
      #       return { exists: response.data.total_count === 1, username: username };
      #   id: check
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Add user as reviewer
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const { owner, repo } = context.repo;
      #       const username = 'tuandang-rikai';
      #       pull_number = context.payload.issue.number
      #       const response = await github.pulls.createReviewRequest({ owner: owner, repo: repo, pull_number: pull_number, reviewers: [username] });
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# name: Testing actions
# on: [issue_comment]

# jobs:
#   testing-actions:
#     runs-on: ubuntu-latest
#     steps:
#       # Checkout source code
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Checkout Pull Request
#         run: hub pr checkout ${{ github.event.issue.number }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

