name: Add Pull Request Reviewer

on:
  issue_comment:
    types: [created]
    branches:
      - '**'

jobs:
  add_pull_request_reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Extract username
        id: extract
        run: |
          regex_match=$(echo "${{ github.event.comment.body }}" | grep -oP '@([a-zA-Z0-9-_]+) [Rr]eview [Rr]equest' | cut -c 2- | cut -d ' ' -f1)
          mentioned_users=($regex_match)
          echo "mentioned_users=${mentioned_users[@]}" >> $GITHUB_OUTPUT
      - name: Check if user exists
        uses: actions/github-script@v6
        id: check_users
        with:
          script: |
            let list_users = '${{ steps.extract.outputs.mentioned_users }}';
            list_users = list_users.split(' ')
            let available_users = []
            for (const username of list_users) {
              const response = await github.request('GET /users/{username}', {
                username: username
              });
              if (response.status === 200) {
                available_users.push(username)
              }
            }
            return { available_users: available_users }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Add user as reviewer
        uses: actions/github-script@v6
        with:
          script: |
            const username = '${{ steps.check_users.outputs.result }}';
            console.log(username)
            const { issue, repository } = context.payload
            const reviewers = [username]
            const pull_number = issue.number
            await github.request('POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers', {
              owner: 'dangngoctuan',
              repo: repository.name,
              pull_number: pull_number,
              reviewers: reviewers
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
