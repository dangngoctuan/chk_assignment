name: Pull Request Reviewer

on:
  pull_request_review:
    types:
      - submitted
jobs:
  request-reviewer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - name: Extract username
      #   uses: actions-ecosystem/action-regex-match@v2
      #   id: extract
      #   with:
      #     text: ${{ github.event.comment.body }}
      #     regex: '(@\S+)'
      # - name: Check if user exists
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const username = '${{ steps.extract.outputs.matches }}';
      #       console.log(username)
      #       const octokit = require("@octokit/request");
      #       const response = await octokit.request("GET /users/{username}", {
      #         username: username
      #       });
      #       console.log(response.data)
      #       return { exists: response.data.total_count === 1, username: username };
      #   id: check
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Authenticate with GitHub
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@github'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create review request
        uses: actions/github-script@v5
        with:
          script: |
            const octokit = new github.GitHub(process.env.GITHUB_TOKEN);
            const owner = context.payload.repository.owner.login;
            const repo = context.payload.repository.name;
            const pull_number = context.payload.pull_request.number;
            const reviewers = ['tuandang-rikai'];
            const response = await octokit.pulls.createReviewRequest({
              owner,
              repo,
              pull_number,
              reviewers
            });
            console.log(response);
      # - name: Add user as reviewer
      #   uses: actions/github-script@v5
      #   with:
      #     script: |
      #       const { owner, repo } = context.repo;
      #       const username = 'tuandang-rikai';
      #       const response = await github.pulls.createReviewRequest({ owner: owner, repo: repo, reviewers: [username] });
